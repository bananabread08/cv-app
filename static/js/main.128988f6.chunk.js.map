{"version":3,"sources":["assets/edit.svg","assets/plus.svg","assets/github-corner-right.svg","components/GeneralInfo.js","components/Education.js","components/Experience.js","components/Skills.js","App.js","index.js"],"names":["GeneralInfo","props","useState","name","role","contact","email","site","isEditOn","GenInfoValues","setGenInfoValues","handleChange","e","target","value","handleSubmit","preventDefault","className","onSubmit","TextField","id","label","variant","onChange","type","src","editIcon","alt","onClick","href","Education","school","gradDate","course","EducationValues","setEducationValues","Experience","company","jobTitle","startYear","endYear","jobDescription","ExperienceValues","setExperienceValues","maxLength","Skills","skill","SkillValues","setSkillValues","App","exportPdf","document","querySelectorAll","forEach","element","style","visibility","html2canvas","querySelector","then","canvas","imgData","toDataURL","pdf","jsPDF","addImage","save","addEducation","setState","uniqid","schoolList","state","concat","addExperience","experienceList","this","githubIcon","addIcon","map","expID","schoolID","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.128988f6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/edit.1610f3fa.svg\";","export default __webpack_public_path__ + \"static/media/plus.b03e3495.svg\";","export default __webpack_public_path__ + \"static/media/github-corner-right.eb92e56d.svg\";","import React, { useState } from 'react';\nimport { TextField } from '@material-ui/core';\nimport '../styles/GeneralInfo.css';\n\nconst GeneralInfo = (props) => {\n  const [GenInfoValues, setGenInfoValues] = useState({\n    name: 'Phoenix Wright',\n    role: 'Defense Attorney',\n    contact: '0912334555466',\n    email: 'theaceattorney12#@gmail.com',\n    site: 'https://github.com/daphoenix12#',\n    isEditOn: false,\n  });\n\n  const handleChange = (e) => {\n    setGenInfoValues({\n      ...GenInfoValues, //save the current state of  all values\n      [e.target.name]: e.target.value, //utilizes the HTML name attribute of the node that is changed\n    });\n  };\n\n  const handleSubmit = (e) => {\n    setGenInfoValues({\n      ...GenInfoValues,\n      isEditOn: !GenInfoValues.isEditOn,\n    });\n    e.preventDefault();\n  };\n\n  return (\n    <div>\n      {GenInfoValues.isEditOn ? (\n        <section className=\"GeneralInfo\">\n          <h3 className=\"SectionLabels\">General Information</h3>\n          <form onSubmit={handleSubmit}>\n            <div>\n              <TextField\n                id=\"GiName\"\n                label=\"Name...\"\n                variant=\"outlined\"\n                name=\"name\"\n                value={GenInfoValues.name}\n                onChange={handleChange}\n              />\n              <TextField\n                id=\"GiRole\"\n                label=\"Role/Position...\"\n                variant=\"outlined\"\n                name=\"role\"\n                value={GenInfoValues.role}\n                onChange={handleChange}\n              />\n            </div>\n            <div>\n              <TextField\n                id=\"GiContact\"\n                label=\"Contact#...\"\n                variant=\"outlined\"\n                name=\"contact\"\n                type=\"number\"\n                value={GenInfoValues.contact}\n                onChange={handleChange}\n              />\n              <TextField\n                id=\"GiEmail\"\n                label=\"Email Address...\"\n                variant=\"outlined\"\n                type=\"email\"\n                name=\"email\"\n                value={GenInfoValues.email}\n                onChange={handleChange}\n              />\n              <TextField\n                id=\"GiSite\"\n                label=\"Website...\"\n                variant=\"outlined\"\n                name=\"site\"\n                value={GenInfoValues.site}\n                onChange={handleChange}\n              />\n            </div>\n            <input className=\"Submit-btn\" type=\"submit\" value=\"Submit\" />\n          </form>\n        </section>\n      ) : (\n        <div className=\"GeneralInfoPreview\">\n          <img\n            src={props.editIcon}\n            alt=\"Edit\"\n            className=\"EditIcon ToHide\"\n            onClick={handleSubmit}\n          ></img>\n          <div>\n            <h2>{GenInfoValues.name}</h2>\n            <h4>{GenInfoValues.role}</h4>\n          </div>\n          <div>\n            <p>Contact#: {GenInfoValues.contact}</p>\n            <p>Email: {GenInfoValues.email}</p>\n            {GenInfoValues.site && (\n              <p>\n                Site: <a href={GenInfoValues.site}>{GenInfoValues.site}</a>\n              </p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GeneralInfo;\n","import React, { useState } from 'react';\nimport { TextField } from '@material-ui/core';\nimport '../styles/Education.css';\n\nconst Education = (props) => {\n  const [EducationValues, setEducationValues] = useState({\n    school: 'School/University Name',\n    gradDate: 'Graduation Year, if applicable',\n    course: 'Course, if Tertiary Education',\n    isEditOn: false,\n  });\n  const handleChange = (e) => {\n    setEducationValues({\n      ...EducationValues,\n      [e.target.name]: e.target.value, //utilizes the HTML name attribute of the node that is changed\n    });\n  };\n  const handleSubmit = (e) => {\n    setEducationValues({\n      ...EducationValues,\n      isEditOn: !EducationValues.isEditOn,\n    });\n    e.preventDefault();\n  };\n\n  return (\n    <div>\n      {EducationValues.isEditOn ? (\n        <section className=\"Education\">\n          <form onSubmit={handleSubmit}>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"School...\"\n              variant=\"outlined\"\n              name=\"school\"\n              value={EducationValues.school}\n              onChange={handleChange}\n            />\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Course...\"\n              variant=\"outlined\"\n              name=\"course\"\n              value={EducationValues.course}\n              onChange={handleChange}\n            />\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Graduation Year...\"\n              variant=\"outlined\"\n              name=\"gradDate\"\n              value={EducationValues.gradDate}\n              onChange={handleChange}\n            />\n            <input className=\"Submit-btn\" type=\"submit\" value=\"Submit\" />\n          </form>\n        </section>\n      ) : (\n        <div className=\"EducationPreview\">\n          <img\n            src={props.editIcon}\n            alt=\"Edit\"\n            className=\"EditIcon ToHide\"\n            onClick={handleSubmit}\n          ></img>\n          <h3>{EducationValues.school}</h3>\n          {EducationValues.course && <p>{EducationValues.course}</p>}\n          {EducationValues.gradDate && <p>{EducationValues.gradDate}</p>}\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Education;\n","import React, { useState } from 'react';\nimport { TextField } from '@material-ui/core';\nimport '../styles/Experience.css';\n\nconst Experience = (props) => {\n  const [ExperienceValues, setExperienceValues] = useState({\n    company: 'Place of Work',\n    jobTitle: 'Job Title/Position',\n    startYear: 'Year Started',\n    endYear: 'Year Ended',\n    jobDescription:\n      'A brief description of your Role/Position in the Company. i.e \"Build highly scalable and reusable front-end codes for customers. Worked collaboratively and supervised a young team to make innovative products and design\".',\n    isEditOn: false,\n  });\n\n  const handleChange = (e) => {\n    setExperienceValues({\n      ...ExperienceValues,\n      [e.target.name]: e.target.value, //utilizes the HTML name attribute of the node that is changed\n    });\n  };\n\n  const handleSubmit = (e) => {\n    setExperienceValues({\n      ...ExperienceValues,\n      isEditOn: !ExperienceValues.isEditOn,\n    });\n    e.preventDefault();\n  };\n\n  return (\n    <div>\n      {ExperienceValues.isEditOn ? (\n        <section className=\"Experience\">\n          <form onSubmit={handleSubmit}>\n            <div>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Company Name...\"\n                variant=\"outlined\"\n                name=\"company\"\n                value={ExperienceValues.company}\n                onChange={handleChange}\n              />\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Job Title...\"\n                variant=\"outlined\"\n                name=\"jobTitle\"\n                value={ExperienceValues.jobTitle}\n                onChange={handleChange}\n              />\n              <TextField\n                id=\"StartYear\"\n                label=\"Year Started...\"\n                variant=\"outlined\"\n                name=\"startYear\"\n                value={ExperienceValues.startYear}\n                onChange={handleChange}\n              />\n            </div>\n            <div>\n              <TextField\n                id=\"EndYear\"\n                label=\"Year Ended...\"\n                variant=\"outlined\"\n                name=\"endYear\"\n                value={ExperienceValues.endYear}\n                onChange={handleChange}\n              />\n              <textarea\n                id=\"outlined-basic\"\n                label=\"Job Description...\"\n                name=\"jobDescription\"\n                value={ExperienceValues.jobDescription}\n                maxLength=\"250\"\n                onChange={handleChange}\n              />\n            </div>\n            <input className=\"Submit-btn\" type=\"submit\" value=\"Submit\" />\n          </form>\n        </section>\n      ) : (\n        <div className=\"ExperiencePreview\">\n          <img\n            src={props.editIcon}\n            alt=\"Edit\"\n            className=\"EditIcon ToHide\"\n            onClick={handleSubmit}\n          ></img>\n          <div className=\"CompanyDeets\">\n            <h3>{ExperienceValues.company}</h3>\n            <p>{ExperienceValues.jobTitle}</p>\n            <p>\n              [{ExperienceValues.startYear}-{ExperienceValues.endYear}]\n            </p>\n          </div>\n          <div>{ExperienceValues.jobDescription}</div>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Experience;\n","import React, { useState } from 'react';\nimport '../styles/Skills.css';\n\nconst Skills = (props) => {\n  const [SkillValues, setSkillValues] = useState({\n    skill: 'HTML-CSS-JavaScript-Webpack-ReactJS-MySQL-OOP',\n    isEditOn: false,\n  });\n  const handleChange = (e) => {\n    setSkillValues({\n      ...SkillValues,\n      [e.target.name]: e.target.value, //utilizes the HTML name attribute of the node that is changed\n    });\n  };\n  const handleSubmit = (e) => {\n    setSkillValues({\n      ...SkillValues,\n      isEditOn: !SkillValues.isEditOn,\n    });\n    e.preventDefault();\n  };\n  return (\n    <div>\n      {SkillValues.isEditOn ? (\n        <section className=\"Skills\">\n          <h3 className=\"SectionLabelsSkill\">Skills</h3>\n          <form onSubmit={handleSubmit}>\n            <textarea\n              name=\"skill\"\n              value={SkillValues.skill}\n              maxLength=\"70\"\n              onChange={handleChange}\n            ></textarea>\n            <input className=\"Submit-btn\" type=\"submit\" value=\"Submit\" />\n          </form>\n        </section>\n      ) : (\n        <div className=\"SkillsPreview\">\n          <img\n            src={props.editIcon}\n            alt=\"Edit\"\n            className=\"EditIcon ToHide\"\n            onClick={handleSubmit}\n          ></img>\n          <h3 className=\"SectionLabelsSkill\">Skills</h3>\n          <p>{SkillValues.skill}</p>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Skills;\n","import React, { Component } from 'react';\nimport './styles/App.css';\nimport editIcon from './assets/edit.svg';\nimport addIcon from './assets/plus.svg';\nimport githubIcon from './assets/github-corner-right.svg';\nimport GeneralInfo from './components/GeneralInfo';\nimport Education from './components/Education';\nimport Experience from './components/Experience';\nimport Skills from './components/Skills';\nimport uniqid from 'uniqid';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      schoolList: [1],\n      experienceList: [2],\n      id: uniqid(),\n    };\n  }\n\n  exportPdf = () => {\n    const hide = document.querySelectorAll('.ToHide');\n    hide.forEach((element) => {\n      element.style.visibility = 'hidden';\n    });\n    html2canvas(document.querySelector('.App'), {}).then((canvas) => {\n      //document.body.appendChild(canvas); // if you want see your screenshot in body.\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'in', [8.5, 11]); //set pdf size to 8.5in x 11in Portrait\n      pdf.addImage(imgData, 'PNG', 0, 0);\n      pdf.save('CV.pdf');\n    });\n  };\n\n  addEducation = (e) => {\n    e.preventDefault();\n    this.setState({\n      id: uniqid(),\n      schoolList: this.state.schoolList.concat(this.state.id),\n    });\n  };\n  addExperience = (e) => {\n    e.preventDefault();\n    this.setState({\n      id: uniqid(),\n      experienceList: this.state.experienceList.concat(this.state.id),\n    });\n  };\n  render() {\n    const { schoolList, experienceList } = this.state;\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <button className=\"Export ToHide\" onClick={this.exportPdf}>\n            Export as PDF\n          </button>\n          <a href=\"https://github.com/bananabread08/cv-app\">\n            <img\n              className=\"github ToHide\"\n              src={githubIcon}\n              alt=\"GitHub link\"\n            ></img>\n          </a>\n        </div>\n        <GeneralInfo editIcon={editIcon} />\n        <hr />\n        <h3 className=\"SectionLabels\">\n          Experience {''} {/*add space between text and icon*/}\n          <img\n            src={addIcon}\n            alt=\"Add Experience\"\n            onClick={this.addExperience}\n            className=\"addIcon ToHide\"\n          ></img>\n        </h3>\n        {experienceList.map((expID) => {\n          return <Experience key={expID} id={expID} editIcon={editIcon} />;\n        })}\n        <hr />\n        <h3 className=\"SectionLabels\">\n          Education {''}\n          <img\n            src={addIcon}\n            alt=\"Add Education\"\n            onClick={this.addEducation}\n            className=\"addIcon ToHide\"\n          ></img>\n        </h3>\n        {schoolList.map((schoolID) => {\n          return <Education key={schoolID} id={schoolID} editIcon={editIcon} />;\n        })}\n        <hr />\n        <Skills editIcon={editIcon} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}